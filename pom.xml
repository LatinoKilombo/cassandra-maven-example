<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cassandra</groupId>
    <artifactId>mvn_integration_example</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.compat.version>2.10</scala.compat.version>
        <scala.version>${scala.compat.version}.5</scala.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>2.1.6</version>
        </dependency>

        <!--Cassandra API uses slf4j for logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.7.12</version>
        </dependency>

        <!-- Cassandra API will use Netty IO over NIO in Linux, if available -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <version>4.0.29.Final</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>2.2.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <!-- Setup the mvn scala plugin to kick in at the different stages of the build -->
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.15.2</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Surefire plugin setup to run Unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <forkMode>once</forkMode>
                    <workingDirectory>target</workingDirectory>
                    <excludes>
                        <exclude>**/*IntegrationTest*.*</exclude>
                        <exclude>**/*ITCase.*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Failsafe plugin setup to run integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <includes>
                        <include>**/*IntegrationTest*.*</include>
                        <include>**/*ITCase.*</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <configuration>
                            <!-- We pass in the cassandra ports as environment variables so the tests can pick them up -->
                            <environmentVariables>
                                <cassandra.nativePort>${cassandra.nativePort}</cassandra.nativePort>
                                <cassandra.rpcPort>${cassandra.rpcPort}</cassandra.rpcPort>
                                <cassandra.jmxPort>${cassandra.jmxPort}</cassandra.jmxPort>
                                <cassandra.storagePort>${cassandra.storagePort}</cassandra.storagePort>
                                <cassandra.stopPort>${cassandra.stopPort}</cassandra.stopPort>
                            </environmentVariables>
                        </configuration>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Find some free network ports for Cassandra -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>cassandra.rpcPort</portName>
                                <portName>cassandra.jmxPort</portName>
                                <portName>cassandra.storagePort</portName>
                                <portName>cassandra.stopPort</portName>
                                <portName>cassandra.nativePort</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Clean up cassandra directory from anything potentially left by a previous run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>cassandra-clean</id>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <target>
                                <delete quiet="true">
                                    <fileset dir="target/cassandra"/>
                                </delete>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- use our custom log4j config for the cassandra instance -->
                        <id>cassandra-log4j</id>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <mkdir dir="target/cassandra/conf/"/>
                                <copy file="src/test/resources/cassandra_log4j.properties"
                                      tofile="target/cassandra/conf/log4j-server.properties"
                                      verbose="true"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Starts a Cassandra instance -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cassandra-maven-plugin</artifactId>
                <version>2.0.0-1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>start</goal>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <startNativeTransport>true</startNativeTransport>
                    <nativeTransportPort>${cassandra.nativePort}</nativeTransportPort>
                    <rpcPort>${cassandra.rpcPort}</rpcPort>
                    <jmxPort>${cassandra.jmxPort}</jmxPort>
                    <storagePort>${cassandra.storagePort}</storagePort>
                    <stopPort>${cassandra.stopPort}</stopPort>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>commons-lang</groupId>
                        <artifactId>commons-lang</artifactId>
                        <version>2.5</version>
                    </dependency>
                    <dependency>
                        <!-- without this, when you call 'mvn cassandra:run', cassandra fails to start
                        the native transport with error: "JNA not found. Native methods will be disabled"-->
                        <groupId>com.sun.jna</groupId>
                        <artifactId>jna</artifactId>
                        <version>3.0.9</version>
                    </dependency>

                    <!-- added so that Cassandra can output logs. Otherwise you get a warning SLF4J related message -->
                    <dependency>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-jdk14</artifactId>
                        <version>1.7.12</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

</project>